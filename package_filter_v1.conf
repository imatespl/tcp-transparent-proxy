[filter]
;Two character offset is one in hex data,start from 0. examples in hex <00100a> 0a offset is 2
first_offset=4
first_pattern=31
second_offset=17
second_pattern=39
reply_package=20
client_filter=on
server_filter=off

[response]
;From template 00 00 AA 1c AA AA AA 1c 1c AA AA AA 1c BB BB BB BB BB BB BB BB 1c CC CC CC CC AA AA AA AA 1c DD AA AA 0e 3a AA AA AA AA AA AA
;Don't delete %()s this is split for config
;Don,t delete first 4 byte <00>
all_data=00000000%(user_data_1)s1c%(user_data_2)s1c1c%(user_data_3)s1c%(copy_data_bb)s1c%(copy_data_cc)s%(user_data_4)s1c%(copy_data_dd)s%(user_data_5)s0e3a%(user_data_6)s
user_data_1 = AA
user_data_2 = AAAAAA
user_data_3 = AAAAAA
user_data_4 = AAAAAA
user_data_5 = AAAA
user_data_6 = AAAAAAAAAAAA

;copy_data_BB just a placeholder don't edit it
;copy data from source data can set a pattern to
;confirm data BB or CC or DD position
copy_data_bb_use_pattern = no
copy_data_bb_pattern = 1c
copy_data_bb_pattern_count = 5
copy_data_bb = BBBBFFBBBB

;if copy data_bb_use_pattern is no, the offset is mean
;from 0 byte of package, if yes, the offset is mean from 
;copy_data_bb_pattern_count of copy_data_bb_pattern in
;package
copy_data_bb_offset = 16
copy_data_bb_length = 8

copy_data_cc_use_pattern = yes
copy_data_cc_pattern = 1c
copy_data_cc_pattern_count = 13
copy_data_cc = CCCCFFCCCC
copy_data_cc_offset=1
;do not change this value, beacause the data can only
;4 byte, change will cause a bug
copy_data_cc_length=4

copy_data_dd_use_pattern = yes
copy_data_dd_pattern = 1c
copy_data_dd_pattern_count = 4
copy_data_dd = DDDDFFDDDD
copy_data_dd_offset = 1
copy_data_dd_length = 1

header_length = 4
